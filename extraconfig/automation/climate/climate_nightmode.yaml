# - alias: Nightmode
#   trigger:
#   - platform: state
#     entity_id: input_boolean.automation_climate_nightmode
#   action:
#    - service: climate.set_temperature
#      data_template:
#        #entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_3_1
#        temperature: >
#         {% if is_state('input_boolean.automation_climate_nightmode', 'on') %}
#            {{ states('input_slider.climate_temperature_night') }}
#          {% else %}
#            {{ states('input_slider.climate_temperature_day') }}
#          {% endif %}
#    - service: notify.pushover
#      data_template:
#        message: >
#          {% if is_state('input_boolean.automation_climate_nightmode', 'on') %}
#            Temperatur sat til {{ states('input_slider.climate_temperature_night') }}
#          {% else %}
#            Temperatur sat til {{ states('input_slider.climate_temperature_day') }}
#          {% endif %}

- alias: Activate nightmode
  trigger: 
  - platform: time
    minutes: '/1'
    seconds: 0
  condition:
  - condition: template
    value_template: "{{ now().strftime('%H:%M') == states('input_select.clima_nightmode_from') }}"
  - condition: state
    entity_id: input_boolean.automation_disable_climate_nightmode
    state: 'off'
  action:
  - service: homeassistant.turn_on
    entity_id: input_boolean.automation_climate_nightmode

- alias: Deactivate nightmode
  trigger: 
  - platform: time
    minutes: '/1'
    seconds: 0
  condition:
  - condition: template
    value_template: "{{ now().strftime('%H:%M') == states('input_select.clima_nightmode_to') }}"
  - condition: state
    entity_id: input_boolean.automation_disable_climate_nightmode
    state: 'off'
  action:
  - service: homeassistant.turn_off
    entity_id: input_boolean.automation_climate_nightmode


- alias: climate_change_value_by_thermostat
  trigger:
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_3_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_4_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_5_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_6_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_7_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_8_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_9_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_10_1
  action:
  - service: input_slider.select_value
    data_template:
      entity_id: >
        {%- if trigger.to_state.attributes.node_id == 3 -%}
          input_slider.climate_temperature_livingroom_day
        {% endif -%}
      value: "{{ trigger.to_state.attributes.temperature }}"
  - service: notify.livingroom_tv
    data_template:
      message: "Node id: {{ trigger.to_state.attributes.node_id }} = {{ trigger.to_state.attributes.temperature }}"

# Nightmode = on
# Nightmode = off
# Change temperature in present
# CHange temperature from radiator





#- alias: climate_test
#  trigger: 
#  - platform: time
#    minutes: '/1'
#    seconds: 0
#  action:
#  - service: notify.livingroom_tv
#    data_template:
#      message: "{{ now().strftime('%H:%M') }}"
