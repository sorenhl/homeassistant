
- alias: Activate nightmode
  trigger: 
  - platform: time
    minutes: '/1'
    seconds: 0
  condition:
  - condition: template
    value_template: "{{ now().strftime('%H:%M') == states('input_select.clima_nightmode_from') }}"
  - condition: state
    entity_id: input_boolean.automation_disable_climate_nightmode
    state: 'off'
  action:
  - service: homeassistant.turn_on
    entity_id: input_boolean.automation_climate_nightmode

- alias: Deactivate nightmode
  trigger: 
  - platform: time
    minutes: '/1'
    seconds: 0
  condition:
  - condition: template
    value_template: "{{ now().strftime('%H:%M') == states('input_select.clima_nightmode_to') }}"
  - condition: state
    entity_id: input_boolean.automation_disable_climate_nightmode
    state: 'off'
  action:
  - service: homeassistant.turn_off
    entity_id: input_boolean.automation_climate_nightmode



##################################################
# Allows temperatures to be adjusted by radiator #
##################################################
- alias: climate_change_value_by_thermostat
  trigger:
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_3_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_4_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_5_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_6_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_7_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_8_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_9_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_10_1
  condition:
  - condition: state
    entity_id: input_boolean.automation_climate_nightmode
    state: 'off' # ONLY change values when it is day, otherwise we will override day temperatures with night
  action:
  - service: input_slider.select_value
    data_template:
      entity_id: >
        {%- if trigger.to_state.attributes.node_id == 3 -%}
          input_slider.climate_temperature_livingroom_day
        {%- elif trigger.to_state.attributes.node_id == 4 -%}
          input_slider.climate_temperature_livingroom_day
        {%- elif trigger.to_state.attributes.node_id == 5 -%}
          input_slider.climate_temperature_kitchen_day
        {%- elif trigger.to_state.attributes.node_id == 6 -%}
          input_slider.climate_temperature_hallway_day
        {%- elif trigger.to_state.attributes.node_id == 7 -%}
          input_slider.climate_temperature_bedroom_day
        {%- elif trigger.to_state.attributes.node_id == 8 -%}
          input_slider.climate_temperature_oliver_day
        {%- elif trigger.to_state.attributes.node_id == 9 -%}
          input_slider.climate_temperature_office_day
        {%- elif trigger.to_state.attributes.node_id == 10 -%}
          input_slider.climate_temperature_bathroom_day
        {% endif -%}
      value: "{{ trigger.to_state.attributes.temperature }}"
#  - service: notify.livingroom_tv
#    data_template:
#      message: "Node id: {{ trigger.to_state.attributes.node_id }} = {{ trigger.to_state.attributes.temperature }}"


##################################################
# Links ALL radiators together                   #
##################################################
- alias: climate_link_all_thermostats_together
  trigger:
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_3_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_4_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_5_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_6_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_7_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_8_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_9_1
  - platform: state
    entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_10_1
  condition:
  - condition: state
    entity_id: input_boolean.automation_climate_nightmode
    state: 'off' # ONLY change values when it is day, otherwise we will override day temperatures with night
  - condition: state
    entity_id: input_boolean.automation_disable_linked_thermostats
    state: 'off'
  - condition: template
    value_template: '{{ {{ trigger.from_state.attributes.temperature }} != trigger.to_state.attributes.temperature }}'
  action:
  - service: climate.set_temperature
    data_template:
      temperature: '{{ trigger.to_state.attributes.temperature }}'
  - service: notify.livingroom_tv
    data_template:
      message: "Setting all radiators to temperature: {{ trigger.to_state.attributes.temperature }}"

##################################################
# Aktivering / Deaktivering af nattetilstand     #
##################################################
- alias: climate_nightmode_on_off
  trigger:
  - platform: state
    entity_id: input_boolean.automation_climate_nightmode
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_3_1
      temperature: >
        {% if is_state('input_boolean.automation_climate_nightmode', 'on') %}
          {{ states('input_slider.climate_temperature_livingroom_night') }}
        {% else %}
          {{ states('input_slider.climate_temperature_livingroom_day') }}
        {% endif %}
  - service: climate.set_temperature
    data_template:
      entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_4_1
      temperature: >
        {% if is_state('input_boolean.automation_climate_nightmode', 'on') %}
          {{ states('input_slider.climate_temperature_livingroom_night') }}
        {% else %}
          {{ states('input_slider.climate_temperature_livingroom_day') }}
        {% endif %}
  - service: climate.set_temperature
    data_template:
      entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_5_1
      temperature: >
        {% if is_state('input_boolean.automation_climate_nightmode', 'on') %}
          {{ states('input_slider.climate_temperature_kitchen_night') }}
        {% else %}
          {{ states('input_slider.climate_temperature_kitchen_day') }}
        {% endif %}
  - service: climate.set_temperature
    data_template:
      entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_6_1
      temperature: >
        {% if is_state('input_boolean.automation_climate_nightmode', 'on') %}
          {{ states('input_slider.climate_temperature_hallway_night') }}
        {% else %}
          {{ states('input_slider.climate_temperature_hallway_day') }}
        {% endif %}
  - service: climate.set_temperature
    data_template:
      entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_7_1
      temperature: >
        {% if is_state('input_boolean.automation_climate_nightmode', 'on') %}
          {{ states('input_slider.climate_temperature_bedroom_night') }}
        {% else %}
          {{ states('input_slider.climate_temperature_bedroom_day') }}
        {% endif %}
  - service: climate.set_temperature
    data_template:
      entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_8_1
      temperature: >
        {% if is_state('input_boolean.automation_climate_nightmode', 'on') %}
          {{ states('input_slider.climate_temperature_oliver_night') }}
        {% else %}
          {{ states('input_slider.climate_temperature_oliver_day') }}
        {% endif %}
  - service: climate.set_temperature
    data_template:
      entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_9_1
      temperature: >
        {% if is_state('input_boolean.automation_climate_nightmode', 'on') %}
          {{ states('input_slider.climate_temperature_office_night') }}
        {% else %}
          {{ states('input_slider.climate_temperature_office_day') }}
        {% endif %}
  - service: climate.set_temperature
    data_template:
      entity_id: climate.danfoss_z_thermostat_014g0013_heating_1_9_1
      temperature: >
        {% if is_state('input_boolean.automation_climate_nightmode', 'on') %}
          {{ states('input_slider.climate_temperature_office_night') }}
        {% else %}
          {{ states('input_slider.climate_temperature_office_day') }}
        {% endif %}



#    - service: notify.pushover
#      data_template:
#        message: >
#          {% if is_state('input_boolean.automation_climate_nightmode', 'on') %}
#            Temperatur sat til {{ states('input_slider.climate_temperature_night') }}
#          {% else %}
#            Temperatur sat til {{ states('input_slider.climate_temperature_day') }}
#          {% endif %}
      


# Nightmode = on
# Nightmode = off
# Change temperature in present
# CHange temperature from radiator
